MongoDB is an open-source document database that provides high performance,
high availability, and automatic scaling.

Document Database

A record in MongoDB is a document, which is a data structure composed
of field and value pairs. MongoDB documents are similar to JSON objects.
The values of fields may include other documents, arrays, and arrays
of documents.


A MongoDB document.

The advantages of using documents are:

    Documents (i.e. objects) correspond to native data types in many
    programming languages.
    Embedded documents and arrays reduce need for expensive joins.
    Dynamic schema supports fluent polymorphism.

MongoDB stores all documents in collections. A collection is a group
of related documents that have a set of shared common indexes.
Collections are analogous to a table in relational databases.



Query

In MongoDB a query targets a specific collection of documents.
Queries specify criteria, or conditions, that identify the documents
that MongoDB returns to the clients. A query may include a projection
that specifies the fields from the matching documents to return.





to open mongo shell - run mongo.sh from usr/bin/
view version - mongo -version
view mongo processes - $ ps -ef | grep mongo
start, stop and restart
sudo service mongodb start
sudo service mongodb stop
service mongodb restart

db.users.insert({username:"dima",password:"0356456"}) - insert new entity
db.users.find() - select all users
db.users.find({username:"google"}) - find entity with username 'google'

db.users.find({$where:"this.username.length<=2"}) -
Find records where username’s length is less than or equal to 2

db.users.find({username:{$exists : true}}) -
Find records where username field is existed.

show dbs – List all databases.
use db_name – Switches to db_name.
show collections – List all tables in the current selected database.
db.users.update({username:"dima"},{$set:{password:"hello123"}})

db.users.remove({username:"google"}) - remove record with name 'google'

db.tablename.drop() - drop the table
db.tablename.remove() - remove all records from table


db.users.getIndexes() -
List all indexes of table “users”, by default the column “_id”
is always the primary key and created automatically.

db.users.ensureIndex({username:1}) - create a new index on column 'username'
db.users.dropIndex({username:1}) - drop index on column 'username'


db.users.find( { age: { $gt: 18 } }, { name: 1, address: 1 } ).limit(5)
