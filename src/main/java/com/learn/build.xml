<?xml version="1.0"?>
<!--
    Copyright (c) 2012 CGI Information Systems and Management Consultants (Deutschland) GmbH.
    All Rights Reserved.

    This software is the confidential and proprietary information of CGI
    Information Systems and Management Consultants (Deutschland) GmbH
    ("Confidential Information").
    You shall not disclose such Confidential Information and shall use it
    only in accordance with the terms of the license agreement you entered
    into with CGI Deutschland GmbH.


    Author: Thomas Kappen <thomas.kappen@cgi.com>
    Version: 2.0 Date: 28.08.2012

    Thats the major ant file to build the hybris foundation project.
    It provides the most important targets like platform installation (see platform.xml for details), activation of the
    correct configuration layer, creation of the deployment, creation of the testautomation, packaging of the delivery files, ...
-->

<project name="flash-ant" default="" basedir=".">

    <!-- RTC properties override build.properties -->
    <property file="build.properties" />

    <import file="${basedir}/ant/antmacros.xml" />


    <tstamp>
        <format property="current.time"
                pattern="MM-dd-yyyy_hh-mm-ss"/>
    </tstamp>

    <path id="class.path">
        <fileset dir="lib">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <!-- Print properties -->
    <print-properties />

	
    <!-- =================================
             target: build-production
        ================================= -->
    <target name="build-production" description="Build the full project including all mandatory tasks">

        <install-hybris-auto hybrisInstallVersion="${hybris.install.version}"/>
        <remove-config/>
        <generate-config/>
        <install-config config="${config.mode}"/>
        <create-version-info storefrontextpath="${storefront.ext.path}"/>
        <newrelic-setup mode="platform"/>

        <ant dir="${platform.home}" antfile="build.xml">
            <target name="production"/>
        </ant>

    </target>


    <!-- =================================
             target: build-deployment
       ================================= -->
    <target name="build-deployment" description="Build the full project including all mandatory tasks">

        <install-hybris-auto hybrisInstallVersion="${hybris.install.version}"/>
        <remove-config/>
        <generate-config/>
        <install-config config="${config.mode}"/>
        <create-version-info storefrontextpath="${storefront.ext.path}"/>
        <newrelic-setup mode="platform"/>

        <ant dir="${platform.home}" antfile="build.xml">
            <property name="input.template" value="develop"/>
            <target name="clean"/>
            <target name="all"/>
        </ant>

    </target>

    <!-- =================================
             target: zip-deployment-artifacts
        =================================  -->
    <target name="zip-deployment-artifacts" description="Zip deployment artifacts and send them to ftp" >

        <ant dir="${platform.home}" antfile="build.xml">
            <target name="production" />
        </ant>

        <newrelic-setup mode="config" />
        <archive-config config="${config.mode}" targetDir="${hybris.home}/temp/hybris/hybrisServer" />

    </target>

    <!-- =================================
           target: send-deployment-artifacts-to-ftp
      =================================  -->
    <target name="send-deployment-artifacts-to-ftp" description="Zip deployment artifacts and send them to ftp" >
        <antcall target="copy-deployment-artifacts" />
    </target>


    <!-- =================================
              target: copy-deployment-artifacts
         =================================  -->
    <target name="copy-deployment-artifacts" description="Copies the deployment files to the netshare">

        <echo message="Copying deployment artifacts to the ${delivery.src.host}/${delivery.src.remotedir}/${current.time}..." />

        <ftp action="mkdir"
             server="${delivery.src.host}"
             userid="${delivery.src.user}"
             password="${delivery.src.pwd}"
             remotedir="${delivery.src.remotedir}/${current.time}">
        </ftp>

        <ftp server="${delivery.src.host}"
             userid="${delivery.src.user}"
             password="${delivery.src.pwd}"
             remotedir="${delivery.src.remotedir}/${current.time}"
             action="send"
             verbose="yes"
             passive="yes">

            <fileset dir="${hybris.home}/temp/hybris/hybrisServer">
                <include name="hybrisServer-*.zip" />
            </fileset>
        </ftp>

        <echo message="... done" />
	    <echo message="${current.time} - use this one as the build timestamp for the deployment task" />
    </target>



    <!-- =================================
             target: create-version-info
        ================================= -->
    <target name="create-version-info" description="Ceate the version info file.">
        <create-version-info storefrontextpath="${storefront.ext.path}" />
    </target>

    <!-- =================================
             target: install-config
        ================================= -->
    <target name="install-config">
	    <install-config config="${config.mode}" />
    </target>

    <!-- =================================
             target: install-dev-config
        ================================= -->
    <target name="install-dev-config">
	    <install-config config="development" />
    </target>

    <!-- =================================
             target: clean
        ================================= -->
    <target name="clean" description="Deletes the temp directory">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="../temp" includes="**/*"/>
        </delete>
    </target>


    <!-- =================================
             target: generate-config

             Generate local.properties files for the environments
    ================================= -->
    <target name="generate-config" description="Generates the local.properties files for the environments">
    	<generate-config />
    </target>


    <!-- =================================
              target: findbugs
         ================================= -->
    <!--<target name="findbugs" description="Launch findbugs">-->
        <!--<findbugs-start outputfile="${findbugs.outputfile}"/>-->
    <!--</target>-->

    <!-- =================================
              target: checkstyle
         ================================= -->
    <target name="checkstyle" description="Launch checkstyle">
        <checkstyle-start outputfile="${checkstyle.outputfile}"/>
    </target>

    <!-- =================================
              target: quality gate
         ================================= -->
    <target name="qg" description="Launch quality gate checks...">
        <ant dir="${platform.home}" antfile="build.xml" >
            <target name="all" />
        </ant>

        <checkstyle-start outputfile="${checkstyle.outputfile}"/>
        <!--<findbugs-start outputfile="" output="text"/>-->
    </target>

    <!-- =================================
             target: newrelic-setup

             Configure newrelic conf files (newrelic.yml, jmx.yml) by local.properties
             Depends on generate-config task
    ================================= -->
    <target name="newrelic-setup" depends="generate-config" description="setup-newrelic">
        <newrelic-setup />
    </target>

    <!-- =================================
           target: sonar

           configure sonar target by build.properties
  ================================= -->
    <target name="sonar" description="code analysis with sonar">
        <ant usenativebasedir="true" antfile="../hybris/bin/platform/build.xml" target="sonar"/>
    </target>




</project>
